Version 0.17.3 (2019-7-8)
   * Fixed unprotected variable issue found by rchk (https://github.com/kalibera/rchk)

Version 0.17.2 (2019-7-6)
   * Remove `restrict` keyword from R source files due to Solaris CRAN checks
   * Remove executable file permission from src/* files due to OSX CRAN detecting license files as executable

Version 0.17.1 (2019-6-24)
   * Re-write of `qdump` function to output more information
   * Added regression unit testing for previous versions (tests/regression_testing.R")

Version 0.16.3 (2019-6-21)
   * Use hash checksums for checking file integrity using the `xxhash` library
      * New parameter: `qsave` -- `check_hash`, computes a checksum on the serialized data
      * New paramter: `qread` -- `strict`, throws an error if checksum does not pre-computed value
   * `qdump` function reports checksums
   * Performance optimizations -- use C interface directly rather than Rcpp containers
      * About 180% serialization speed improvement for large lists (e.g., `as.list(runif(1e6))`)
   * Removed `qinspect` function as checks are now performed within serialization functiosn directly
   * Additional error checking for proper compression and serialization
      * The goal is R should not crash even if a file is corrupted

Version 0.16.2 (2019-6-15)
   * Added `Set_elt` method for alt-rep string class (https://github.com/traversc/qs/issues/9)
   * Code cleanup:
      * Additional error checking during compression and de-compression
	  * Use of RAII for protection stack handling
      * Use of templates instead of function pointers for compression and decompression
	  * Moved some functions to qs_common.h as templates to avoid code redundancy

Version 0.16.1 (2019-5-15)

   * Support for zstd streaming interface.  As opposed to block compression routines, streaming compression offers better compression ratio but is not as fast 
   * Re-factor configure script to not be so messy
   * Changed file suffixes in examples from "q" to "qs" (https://github.com/traversc/qs/issues/5)
   * (Not included) brotli compression library was evaluated, but did not offer better performance compared to zstd on average
   * Updated zstd to version 1.4.0 (from 1.3.8) and lz4 to 1.9.1 (from 1.8.2)
   * Updated benchmarks to include zstd streaming interface and newer versions of zstd and lz4
   * C++ macro compiler warnings fixed in zstd; this needs to be done every time zstd is updated (https://github.com/facebook/zstd/issues/1538)

Version 0.15.1 (2019-04-07)

   * Initial multi-threading support using C++11 concurrency
   * Added support for lz4HC (high compression lz4 variant, but slower compression)
   * Additional error check handling to verify file integrity; see `qinspect` function
   * Additional documentation and examples
   * Normalize file paths before attempting to write or read (https://github.com/traversc/qs/issues/4)
   * Added star name database from the International Astronomical Union; see `?starnames`

Version 0.14.1  (2019-03-03)

   * Support for LZ4 compression codec
   * Defined several compression presets: "fast", "balanced" and "high" which trade speed for compression ratio
   * Byte shuffling routines adapted from the BLOSC library, for higher compression ratios
   * Utility functions for compressing and decompressing raw data using zstd or lz4

Version 0.13.1  (2019-02-13)

   * Added configure file to detect system installation of zstd
   * Fixes to "undefined behavior" (C++ unaligned type casts)

Version 0.12 (2019-02-08)

   * Initial CRAN release
   * This package provides serialization of R objects through block compression with zstd
   * Utilizes Alt-rep data to quickly de-serialize string data
